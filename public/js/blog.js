/* ========================================
   ÂçöÂÆ¢Á≥ªÁªü JavaScript
   ÊñáÁ´†ÁÆ°ÁêÜ„ÄÅÊêúÁ¥¢„ÄÅÁ≠õÈÄâÂíåÊ∏≤Êüì
   ======================================== */

class BlogSystem {
    constructor() {
        this.articles = [];
        this.filteredArticles = [];
        this.currentCategory = 'all';
        this.currentPage = 1;
        this.articlesPerPage = 6;
        this.isReady = false;
        // ‰∏çÂú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠Ë∞ÉÁî® initÔºåÁî±Â§ñÈÉ®Ë∞ÉÁî®
    }
    
    async init() {
        // Âä†ËΩΩÊñáÁ´†Êï∞ÊçÆ
        await this.loadArticles();
        
        // ÁªëÂÆö‰∫ã‰ª∂
        this.bindEvents();
        
        // Ê∏≤ÊüìÊñáÁ´†
        this.renderArticles();
        
        // Ê†áËÆ∞‰∏∫Â∑≤Â∞±Áª™
        this.isReady = true;
    }
    
    async loadArticles() {
        try {
            // ‰ªé JSON Êñá‰ª∂Âä†ËΩΩÊñáÁ´†ÂÖÉÊï∞ÊçÆ
            const response = await fetch('blog/articles.json');
            
            if (!response.ok) {
                throw new Error('Failed to load articles');
            }
            
            this.articles = await response.json();
            this.filteredArticles = [...this.articles];
            
            console.log(`‚úÖ Loaded ${this.articles.length} articles`);
            
        } catch (error) {
            console.error('‚ùå Error loading articles:', error);
            
            // ÊòæÁ§∫ÈîôËØØÊèêÁ§∫
            if (window.toast) {
                window.toast.show('Failed to load articles', 'error');
            }
            
            // ‰ΩøÁî®Á©∫Êï∞ÁªÑÈò≤Ê≠¢Á®ãÂ∫èÂ¥©Ê∫É
            this.articles = [];
            this.filteredArticles = [];
        }
    }
    
    bindEvents() {
        // ÊêúÁ¥¢ÂäüËÉΩ
        const searchInput = document.getElementById('blogSearch');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                this.handleSearch(e.target.value);
            });
        }
        
        // ÂàÜÁ±ªÁ≠õÈÄâ
        const filterButtons = document.querySelectorAll('.filter-btn');
        filterButtons.forEach(btn => {
            btn.addEventListener('click', (e) => {
                // Êõ¥Êñ∞ÊøÄÊ¥ªÁä∂ÊÄÅ
                filterButtons.forEach(b => b.classList.remove('active'));
                e.target.classList.add('active');
                
                // Á≠õÈÄâÊñáÁ´†
                const category = e.target.dataset.category;
                this.filterByCategory(category);
            });
        });
    }
    
    handleSearch(query) {
        const searchQuery = query.toLowerCase().trim();
        
        if (!searchQuery) {
            this.filteredArticles = this.currentCategory === 'all' 
                ? [...this.articles]
                : this.articles.filter(article => article.category === this.currentCategory);
        } else {
            let articlesToSearch = this.currentCategory === 'all'
                ? this.articles
                : this.articles.filter(article => article.category === this.currentCategory);
            
            this.filteredArticles = articlesToSearch.filter(article => 
                article.title.toLowerCase().includes(searchQuery) ||
                article.excerpt.toLowerCase().includes(searchQuery) ||
                article.tags.some(tag => tag.toLowerCase().includes(searchQuery))
            );
        }
        
        this.currentPage = 1;
        this.renderArticles();
    }
    
    filterByCategory(category) {
        this.currentCategory = category;
        
        if (category === 'all') {
            this.filteredArticles = [...this.articles];
        } else {
            this.filteredArticles = this.articles.filter(
                article => article.category === category
            );
        }
        
        // ÈáçÊñ∞Â∫îÁî®ÊêúÁ¥¢ÔºàÂ¶ÇÊûúÊúâÔºâ
        const searchInput = document.getElementById('blogSearch');
        if (searchInput && searchInput.value) {
            this.handleSearch(searchInput.value);
        } else {
            this.currentPage = 1;
            this.renderArticles();
        }
    }
    
    renderArticles() {
        const grid = document.getElementById('articlesGrid');
        const loadingState = document.getElementById('loadingState');
        const emptyState = document.getElementById('emptyState');
        
        if (!grid) return;
        
        // ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
        loadingState.style.display = 'flex';
        grid.innerHTML = '';
        emptyState.style.display = 'none';
        
        // Ê®°ÊãüÂä†ËΩΩÂª∂Ëøü
        setTimeout(() => {
            loadingState.style.display = 'none';
            
            // Ê£ÄÊü•ÊòØÂê¶ÊúâÊñáÁ´†
            if (this.filteredArticles.length === 0) {
                emptyState.style.display = 'block';
                return;
            }
            
            // ÂàÜÈ°µ
            const startIndex = (this.currentPage - 1) * this.articlesPerPage;
            const endIndex = startIndex + this.articlesPerPage;
            const articlesToShow = this.filteredArticles.slice(startIndex, endIndex);
            
            // Ê∏≤ÊüìÊñáÁ´†Âç°Áâá
            articlesToShow.forEach((article, index) => {
                const card = this.createArticleCard(article, index);
                grid.appendChild(card);
            });
            
            // Ê∏≤ÊüìÂàÜÈ°µ
            this.renderPagination();
            
        }, 300);
    }
    
    createArticleCard(article, index) {
        const card = document.createElement('div');
        card.className = 'article-card fade-in';
        card.style.animationDelay = `${index * 0.1}s`;
        
        const categoryColors = {
            programming: '#3b82f6',
            design: '#ec4899',
            tutorial: '#10b981',
            thoughts: '#f59e0b'
        };
        
        card.innerHTML = `
            <div class="article-thumbnail">${article.thumbnail}</div>
            <div class="article-content">
                <div class="article-meta">
                    <span class="article-category" style="background: ${categoryColors[article.category] || '#667eea'}">
                        ${article.category}
                    </span>
                    <span class="article-date">
                        üìÖ ${this.formatDate(article.date)}
                    </span>
                </div>
                <h3>${article.title}</h3>
                <p class="article-excerpt">${article.excerpt}</p>
                ${article.id <= 6 ? `
                <div style="margin: 10px 0; padding: 8px 12px; background: rgba(251, 191, 36, 0.1); border-left: 3px solid #f59e0b; border-radius: 4px;">
                    <p style="margin: 0; font-size: 0.85rem; color: #d97706; line-height: 1.4;">
                        ‚ö†Ô∏è <strong>AI-Generated Content:</strong> Large portions of this article were generated by AI. Please review critically.
                    </p>
                </div>
                ` : ''}
                <div class="article-tags">
                    ${article.tags.map(tag => `<span class="article-tag">#${tag}</span>`).join('')}
                </div>
                <div class="article-footer">
                    <span class="read-time">‚è±Ô∏è ${article.readTime}</span>
                    <a href="article.html?id=${article.id}" class="read-more">
                        Read More ‚Üí
                    </a>
                </div>
            </div>
        `;
        
        // ÁÇπÂáªÂç°ÁâáË∑≥ËΩ¨
        card.addEventListener('click', (e) => {
            if (!e.target.closest('.read-more')) {
                window.location.href = `article.html?id=${article.id}`;
            }
        });
        
        return card;
    }
    
    renderPagination() {
        const pagination = document.getElementById('pagination');
        if (!pagination) return;
        
        const totalPages = Math.ceil(this.filteredArticles.length / this.articlesPerPage);
        
        if (totalPages <= 1) {
            pagination.innerHTML = '';
            return;
        }
        
        let paginationHTML = '';
        
        // ‰∏ä‰∏ÄÈ°µÊåâÈíÆ
        paginationHTML += `
            <button class="page-btn" ${this.currentPage === 1 ? 'disabled' : ''} 
                    onclick="blogSystem.goToPage(${this.currentPage - 1})">
                ‚Üê Prev
            </button>
        `;
        
        // È°µÁ†ÅÊåâÈíÆ
        for (let i = 1; i <= totalPages; i++) {
            if (
                i === 1 || 
                i === totalPages || 
                (i >= this.currentPage - 1 && i <= this.currentPage + 1)
            ) {
                paginationHTML += `
                    <button class="page-btn ${i === this.currentPage ? 'active' : ''}" 
                            onclick="blogSystem.goToPage(${i})">
                        ${i}
                    </button>
                `;
            } else if (i === this.currentPage - 2 || i === this.currentPage + 2) {
                paginationHTML += '<span style="padding: 10px;">...</span>';
            }
        }
        
        // ‰∏ã‰∏ÄÈ°µÊåâÈíÆ
        paginationHTML += `
            <button class="page-btn" ${this.currentPage === totalPages ? 'disabled' : ''} 
                    onclick="blogSystem.goToPage(${this.currentPage + 1})">
                Next ‚Üí
            </button>
        `;
        
        pagination.innerHTML = paginationHTML;
    }
    
    goToPage(page) {
        this.currentPage = page;
        this.renderArticles();
        
        // ÊªöÂä®Âà∞È°∂ÈÉ®
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
    
    formatDate(dateString) {
        const date = new Date(dateString);
        const options = { year: 'numeric', month: 'short', day: 'numeric' };
        return date.toLocaleDateString('en-US', options);
    }
    
    // Ëé∑ÂèñÂçïÁØáÊñáÁ´†ÔºàÁî®‰∫éÊñáÁ´†ËØ¶ÊÉÖÈ°µÔºâ
    getArticleById(id) {
        return this.articles.find(article => article.id === parseInt(id));
    }
}

// ===== ÂàùÂßãÂåñ =====
let blogSystem;

document.addEventListener('DOMContentLoaded', async () => {
    blogSystem = new BlogSystem();
    
    // Á≠âÂæÖÊñáÁ´†Âä†ËΩΩÂÆåÊàê
    await blogSystem.init();
    
    // ÂØºÂá∫Âà∞ÂÖ®Â±ÄÔºå‰æõ article.js ‰ΩøÁî®
    window.blogSystem = blogSystem;
    
    console.log('üìù Blog system initialized!');
    
    // Ëß¶ÂèëËá™ÂÆö‰πâ‰∫ã‰ª∂ÔºåÈÄöÁü•ÂÖ∂‰ªñÊ®°ÂùóÂçöÂÆ¢Á≥ªÁªüÂ∑≤Â∞±Áª™
    window.dispatchEvent(new CustomEvent('blogSystemReady', { detail: { blogSystem } }));
    
    // ÊòæÁ§∫Ê¨¢ËøéÊ∂àÊÅØ
    if (window.toast) {
        setTimeout(() => {
            window.toast.show('Welcome to the blog! üìö', 'info', 2000);
        }, 1000);
    }
});
